<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AnalisadorSSIS">
    <!-- Header text style -->
    <Style x:Key="HeaderTextStyle">
        <Setter Property="Label.VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Label.HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Label.FontFamily" Value="Trebuchet MS"></Setter>
        <Setter Property="Label.FontWeight" Value="Bold"></Setter>
        <Setter Property="Label.FontSize" Value="18"></Setter>
        <Setter Property="Label.Foreground" Value="#183862"></Setter>
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Label.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Label.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Label style -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Label.FontSize" Value="16"></Setter>
        <Setter Property="Margin" Value="0,0,0,5" />
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabelStyle2" TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontSize" Value="16"></Setter>
        <Setter Property="Margin" Value="10,0,0,5" />
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Combobox Style -->
    <Style x:Key="ComboboxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontSize" Value="14"></Setter>
    </Style>

    <!-- Textbox Style -->
    <Style x:Key="TextboxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontSize" Value="14"></Setter>
    </Style>

    <!-- CheckBox Style -->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Label.FontSize" Value="14"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="15" Height="15"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    ClipToBounds="True">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="1" ShadowDepth="2" />
                                </Border.Effect>
                                <Path x:Name="CheckMark"
                                      Width="10" Height="10" HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 18 32.34 l -8.34 -8.34 -2.83 2.83 11.17 11.17 24 -24 -2.83 -2.83 z"
                                      Stretch="Fill"
                                      Stroke="Black"
                                      StrokeEndLineCap="Round"
                                      StrokeStartLineCap="Round"
                                      StrokeThickness="2" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- List header style -->
    <Style x:Key="ListHeaderStyle" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="#3274CD" />
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Label.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid header style -->
    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="#3274CD" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <!-- 
                When in high contrast modes, follow system colors to present proper contrast between adjacent colors.
                Also add a border here to differentiate the header from the actual data as we no longer have a 
                disparate color.
            -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- List header text style -->
    <Style x:Key="ListHeaderTextStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Triggers>
            <!-- When in high contrast modes, follow system colors to present proper contrast between adjacent colors. -->
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Button style -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Label.FontFamily" Value="Trebuchet MS"></Setter>
        <Setter Property="Label.FontSize" Value="14"></Setter>
    </Style>
</ResourceDictionary>